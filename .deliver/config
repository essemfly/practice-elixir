APP="udo"

AUTO_VERSION="commit-count+git-revision+branch-unless-master"

BUILD_HOST="essemfly.com"
BUILD_AT="/tmp/edeliver/udo/builds"
BUILD_USER="essem"

PRODUCTION_HOSTS="gostop.essemfly.com"
PRODUCTION_USER="essem"
DELIVER_TO="/home/essem"

pre_erlang_get_and_update_deps() {
  # copy it on the build host to the build directory when building
  local _secret_config_file_on_build_host="/home/essem/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    status "Linking '$_secret_config_file_on_build_host' to build config dir"
    __sync_remote "
      ln -sfn '$_secret_config_file_on_build_host' '$BUILD_AT/apps/gostop/config/prod.secret.exs'
    "
    __sync_remote "
      ln -sfn '$_secret_config_file_on_build_host' '$BUILD_AT/apps/push_server/config/prod.secret.exs'
    "
  fi
}

pre_erlang_clean_compile() {
    status "Installing NPM dependencies"
    __sync_remote "  # runs the commands on the build host
      [ -f ~/.profile ] && source ~/.profile # load profile
      set -e # fail if any command fails

      cd '$BUILD_AT' # go to the build directory on the build host
      npm install $SILENCE
    "

    status "Building static files"
    __sync_remote "
      [ -f ~/.profile ]
      set -e

      cd '$BUILD_AT'
      mkdir -p priv/static
      npm run deploy $SILENCE
    "

    status "Running phoenix.digest"
    __sync_remote "
      [ -f ~/.profile ] && source ~/.profile
      set -e

      cd '$BUILD_AT'
      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
    "
  }